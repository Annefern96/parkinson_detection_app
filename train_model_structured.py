# -*- coding: utf-8 -*-
"""train_model_structured.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zrhueF0X6GlJMzNeUzs-AmXOA4ea6QEJ
"""

# train_model_structured.py â€” trains XGBoost on UCI Parkinson's dataset (22 features)

import pandas as pd
import pickle
from xgboost import XGBClassifier
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
import os

# Load dataset
url = "https://archive.ics.uci.edu/ml/machine-learning-databases/parkinsons/parkinsons.data"
df = pd.read_csv(url)
df = df.drop(columns=["name"])

# Features and target
X = df.drop(columns=["status"])
y = df["status"]

# Scale the features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Split into train and test
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# Train XGBoost model
model = XGBClassifier(eval_metric="logloss", random_state=42)
model.fit(X_train, y_train)

# Save model and scaler
os.makedirs("model", exist_ok=True)

with open("model/xgb_model.pkl", "wb") as f:
    pickle.dump(model, f)

with open("model/scaler.pkl", "wb") as f:
    pickle.dump(scaler, f)

print("Model and scaler saved to 'model/' folder.")
